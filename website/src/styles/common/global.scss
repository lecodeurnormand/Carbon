@font-face {
  font-family: 'Montserrat-Light';
  font-display: swap;
  src: url("'~assets/fonts/Montserrat-ExtraLight.ttf") format('truetype');
}
@font-face {
  font-family: 'Montserrat-Regular';
  font-display: swap;
  src: url("'~assets/fonts/Montserrat-Regular.ttf") format('truetype');
}
@font-face {
  font-family: 'Montserrat-SemiBold';
  font-display: swap;
  src: url("'~assets/fonts/Montserrat-SemiBold.ttf") format('truetype');
}
@font-face {
  font-family: 'Montserrat-Bold';
  font-display: swap;
  src: url("'~assets/fonts/Montserrat-Bold.ttf") format('truetype');
}
@font-face {
  font-family: 'Playfair-Regular';
  font-display: swap;
  src: url('../../../assets/fonts/PlayfairDisplay-Regular.ttf')
    format('truetype');
}
// FONT
$font_light: 'Montserrat-Light';
$font_regular: 'Montserrat-Regular';
$font_bold: 'Montserrat-Bold';
$font_semibold: 'Montserrat-SemiBold';
$font_play: 'Playfair-Regular';
// COLOR
$color_1: #2fce65;
$color_2: black;
$color_3: white;

/*=================================
=            TEXT SIZE            =
=================================*/
/*----------  H1  ----------*/
$h1_textsize_desktop: 64px;
$h1_textsize_mobile: 40px;

/*----------  H2  ----------*/
$h2_textsize_desktop: 48px;
$h2_textsize_mobile: 32px;

/*----------  H3  ----------*/
$h3_textsize_desktop: 28px;
$h3_textsize_mobile: 24px;

/*----------  H4  ----------*/
$h4_textsize_desktop: 24px;
$h4_textsize_mobile: 24px;

/*----------  H5  ----------*/
$h5_textsize_desktop: 16px;
$h5_textsize_mobile: 16px;

/*----------  H6  ----------*/
$h6_textsize_desktop: 14px;
$h6_textsize_mobile: 14px;

/*----------  H7  ----------*/
$h7_textsize_desktop: 12px;
$h7_textsize_mobile: 12px;

/*----------  PARAGRAPH BIG  ----------*/
$paragraphBig_textsize_desktop: 18px;

/*----------  PARAGRAPH SMALL  ----------*/
$paragraphMedium_textsize_desktop: 16px;

/*----------  PARAGRAPH SMALL  ----------*/
$paragraphSmall_textsize_desktop: 14px;

/*----------  PARAGRAPH TINY  ----------*/
$paragraphTiny_textsize_desktop: 12px;

/*----------  LINK  ----------*/
$linkBig_textsize_desktop: 18px;
$linkMedium_textsize_desktop: 16px;
$linkSmall_textsize_desktop: 14px;

/*=====  End of TEXT SIZE  ======*/

/*=======================================
=            GRID RESPONSIVE            =
=======================================*/

$grid_tablet: calc(100% - 100px);
$grid_mobile: calc(100% - 50px);

/*===========  End of GRID  ===========*/

/*===================================
=            BREAK POINT            =
===================================*/

$breakPoint_tablet: 1200px;
$breakPoint_mobile: 700px;

@media screen and (min-width: $breakPoint_mobile) and (max-width: $breakPoint_tablet) and (orientation: portrait) {
}

@media screen and (min-width: $breakPoint_mobile) and (max-width: $breakPoint_tablet) and (orientation: landscape) {
}

@media screen and (min-width: $breakPoint_mobile) and (max-width: $breakPoint_tablet) {
}

@media screen and (max-width: $breakPoint_mobile) {
}

/*=====  End of BREAK POINT  ======*/

/* --------------------------------------------------------- */
/* ********************* END VARIABLES ********************* */
/* --------------------------------------------------------- */

/* ------------------------------------------------- */
/* ********************* MIXIN ********************* */
/* ------------------------------------------------- */

/*----------  HEADING  ----------*/
@mixin styleH($hx, $color: $color_2, $font: $font_bold) {
  @if $hx== 'h1' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h1_textsize_desktop;
      $lineHeight: $h1_textsize_desktop * 1;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h1_textsize_mobile;
      $lineHeight: $h1_textsize_mobile * 1.2;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h2' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h2_textsize_desktop;
      $lineHeight: $h2_textsize_desktop * 1.1;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h2_textsize_mobile;
      $lineHeight: $h2_textsize_mobile * 1;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h3' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h3_textsize_desktop;
      $lineHeight: $h3_textsize_desktop * 1.1;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h3_textsize_mobile;
      $lineHeight: $h3_textsize_mobile * 1.1;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h4' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h4_textsize_desktop;
      $lineHeight: $h4_textsize_desktop * 1.1;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h4_textsize_mobile;
      $lineHeight: $h4_textsize_mobile * 1.3;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h5' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h5_textsize_desktop;
      $lineHeight: $h5_textsize_desktop * 1.3;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h5_textsize_mobile;
      $lineHeight: $h5_textsize_mobile * 1.3;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h6' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h6_textsize_desktop;
      $lineHeight: $h6_textsize_desktop * 1.3;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h6_textsize_mobile;
      $lineHeight: $h6_textsize_mobile * 1.3;
      line-height: $lineHeight;
    }
  } @else if $hx == 'h7' {
    @media screen and (min-width: $breakPoint_mobile) {
      font-size: $h7_textsize_desktop;
      $lineHeight: $h7_textsize_desktop * 1.3;
      line-height: $lineHeight;
    }

    @media screen and (max-width: $breakPoint_mobile) {
      font-size: $h7_textsize_mobile;
      $lineHeight: $h7_textsize_mobile * 1.3;
      line-height: $lineHeight;
    }
  }
  color: $color;
  font-family: $font, sans-serif;
}

/*----------  PARAGRAPH  ----------*/
@mixin styleP($px, $color: $color_3, $font: $font_regular) {
  @if $px == 'big' {
    font-size: $paragraphBig_textsize_desktop;
    $lineHeight: $paragraphBig_textsize_desktop * 1.5;
    line-height: $lineHeight;
  } @else if $px == 'medium' {
    font-size: $paragraphMedium_textsize_desktop;
    $lineHeight: $paragraphMedium_textsize_desktop * 1.5;
    line-height: $lineHeight;
  } @else if $px == 'small' {
    font-size: $paragraphSmall_textsize_desktop;
    $lineHeight: $paragraphSmall_textsize_desktop * 1.3;
    line-height: $lineHeight;
  } @else if $px == 'tiny' {
    font-size: $paragraphTiny_textsize_desktop;
    $lineHeight: $paragraphTiny_textsize_desktop * 1.1;
    line-height: $lineHeight;
  }

  color: $color;
  font-family: $font;
}

/*----------  LINK  ----------*/
@mixin styleA($ax: 'big', $color: $color_2) {
  display: inline-flex;
  position: relative;
  align-items: center;
  text-decoration: none;
  font-family: $font_bold, sans-serif;

  @if $ax == 'big' {
    font-size: $linkBig_textsize_desktop;
    $lineHeight: $linkBig_textsize_desktop * 1.3;
    line-height: $lineHeight;
  } @else if $ax == 'medium' {
    font-size: $linkMedium_textsize_desktop;
    $lineHeight: $linkMedium_textsize_desktop * 1;
    line-height: $lineHeight;
  } @else if $ax == 'small' {
    font-size: $linkSmall_textsize_desktop;
    $lineHeight: $linkSmall_textsize_desktop * 1.1;
    line-height: $lineHeight;
  }

  color: $color;
}

/*----------  BUTTON  ----------*/
@mixin styleButton($size: 'big', $style: '1') {
  text-decoration: none;
  border: none;
  display: inline-flex;
  align-items: center;
  text-transform: uppercase;
  border-radius: 50px;
  cursor: pointer;
  transition: background-color 0.25s ease, border-color 0.25s ease;

  .btn_text {
    transition: color 0.25s ease;
  }

  .btn_icn {
    margin-left: 8px;
    width: 20px;
    transition: transform 0.25s ease;
    circle {
      transition: fill 0.25s ease;
    }
    path {
      stroke-width: 0.6px;
      transition: stroke 0.25s ease, fill 0.25s ease;
    }
  }

  @if $size == 'big' {
    height: 61px;
    padding: 0px 24px;

    .btn_text {
      @include styleA($ax: 'medium');
    }
  }

  @if $size == 'medium' {
    height: 50px;
    padding: 0px 24px;

    .btn_text {
      @include styleA($ax: 'medium');
    }
  } @else if $size == 'small' {
    height: 42px;
    padding: 0px 16px;

    .btn_text {
      @include styleA($ax: 'small');
    }
  }

  @if $style == '1' {
    background-color: $color_1;

    .btn_text {
      color: $color_green;
    }
    .btn_icn {
      circle {
        fill: $color_green;
      }
      path {
        stroke: $color_1;
        fill: $color_1;
      }
    }

    &:hover {
      background-color: $color_green;
      .btn_text {
        color: $color_1;
      }
      .btn_icn {
        transform: rotate(-30deg);
        circle {
          fill: $color_1;
        }
        path {
          stroke: $color_green;
          fill: $color_green;
        }
      }
    }
  } @else if $style == '2' {
    background-color: $color_green;

    .btn_text {
      color: $color_2;
    }
    .btn_icn {
      stroke: $color_1;
    }

    &:hover {
      background-color: $color_1;

      .btn_text {
        color: $color_green;
      }
      .btn_icn {
        stroke: $color_2;
      }
    }
  } @else if $style == '2_1' {
    background-color: $color_1;

    .btn_text {
      color: $color_green;
    }
    .btn_icn {
      circle {
        fill: $color_green;
      }
      path {
        stroke: $color_1;
        fill: $color_1;
      }
    }
    &:hover {
      .btn_icn {
        transform: rotate(-30deg);
      }
    }
  } @else if $style == '2_2' {
    background-color: $color_green;

    .btn_text {
      color: $color_green;
    }
    .btn_icn {
      circle {
        fill: $color_green;
      }
      path {
        stroke: $color_1;
        fill: $color_1;
      }
    }
    &:hover {
      background: $color_2;
      span {
        color: $color_green;
      }
      .btn_icn {
        transform: rotate(-30deg);
      }
    }
  } @else if $style == '3' {
    background-color: transparent;
    border: 1px solid $color_green;

    .btn_text {
      color: $color_green;
    }

    &:hover {
      background-color: $color_green;

      .btn_text {
        color: $color_2;
      }
      .btn_icn {
        stroke: $color_1;
      }
    }
  }
}

/*----------  GRID  ----------*/

/*----------  GRID  ----------*/

$grid_width: 64px; // COL WIDTH
$grid_gap: 40px; // GUTTER WIDTH
$grid_col: 12; // COL DEFAULT

$gap_tablet: 32px; // PADDING LEFT & RIGHT TABLET
$grid_tablet: calc(100% - (#{$gap_tablet} * 2)); // GRID TABLET

$gap_mobile: 16px; // PADDING LEFT & RIGHT MOBILE
$grid_mobile: calc(100% - (#{$gap_mobile} * 2)); // GRID MOBILE

@function calcGrid($numCol: 12, $addGap: 0) {
  $gap: calc(#{$addGap} * #{$grid_gap});
  $grid_gap: calc(#{$grid_gap} * 11 / 12);
  @return calc(
    (
        (#{$grid_width} * #{$numCol}) +
          (
            (#{$grid_gap} * #{$grid_col} / (#{$grid_col} - 1)) *
              (#{$numCol} - 1)
          )
      ) + #{$gap}
  );
}

$breakPoint_tablet: calc(calcGrid() + (#{$gap_tablet} * 2));
$breakPoint_mobile: 700px;

@mixin styleGrid($numCol: 12, $addGap: 0) {
  margin-right: auto;
  margin-left: auto;

  @media screen and (width > $breakPoint_tablet) {
    width: calcGrid($numCol, $addGap);
  }

  @media screen and ($breakPoint_mobile <= width <= $breakPoint_tablet) {
    width: $grid_tablet;
  }

  @media screen and (width <= $breakPoint_mobile) {
    width: $grid_mobile;
  }
}

/* ----------------------------------------------------- */
/* ********************* END MIXIN ********************* */
/* ----------------------------------------------------- */
